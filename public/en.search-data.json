{"/about/":{"data":{"":"You can send the email to me 0spectrep0@gmail.com\nAnd can know more about me at\nYouTube Channel BiliBili"},"title":"About Me"},"/docs/":{"data":{"this-is-my-note-and-you-can-get-start-at-the#This is my Note and you can get start at the":"This is my Note and you can get start at the TechThe Note For Tech SchoolThe Note For School"},"title":"Note"},"/docs/school/":{"data":{"":"This is the School Note, will share the Note for DSE"},"title":"School"},"/docs/school/1-chinese/":{"data":{"":"中國語文科是文憑試的四個核心科目之一。以文憑試成績報讀本地學士學位課程，中國語文科必須取得第 3 級或以上成績，作為最低入學條件之一；而報讀本地副學位課程，亦須取得第 2 級或以上成績。\n課程內容包括九個學習範疇：閱讀、寫作、聆聽、說話、文學、中華文化、品德情意、思維、語文自學。提高聽說讀寫、獨立思考、明辨慎思的能力。透過品德培養、文學和文化學習，幫助學生建立正面的價值觀和積極的態度。養成個人道德情操，對家庭、國家以至世界的責任感。"},"title":"中文"},"/docs/school/1-chinese/1-%E8%AB%96%E4%BB%81%E8%AB%96%E5%AD%9D%E8%AB%96%E5%90%9B%E5%AD%90/":{"data":{"":"","論仁#論仁":"子曰：「不仁者，不可以久處約，不可以長處樂。仁者安仁，知者利仁。」\n孔子說：「沒有仁德的人，沒有辦法長期處在窮困的環境中（會受不了而胡作非為），也沒有辦法長期處在安樂的環境中（會得意忘形而驕奢淫逸）。有仁德的人，很自然地安於實行仁德；有智慧的人，則是因為知道仁德的好處而去實行它。」\n子曰：「富與貴，是人之所欲也；不以其道得之，不處也。貧與賤，是人之所惡也；不以其道得之，不去也。君子去仁，惡乎成名？君子無終食之間違仁，造次必於是，顛沛必於是。」\n孔子說：「財富和高貴的地位，是人們都想要的；但如果不是用正當的方法得到它，君子是不會接受的。貧窮和卑賤的地位，是人們都討厭的；但如果不是用正當的方法來擺脫它，君子是不會逃避的。君子如果捨棄了仁德，還怎麼能成就君子的名聲呢？所以君子在任何時候，即使是吃一頓飯那麼短的時間，也不會違背仁德；在匆忙倉促的時候必定堅守著仁，在困頓潦倒的時候也必定堅守著仁。」\n顏淵問仁。子曰：「克己復禮為仁。一日克己復禮，天下歸仁焉。為仁由己，而由人乎哉？」\n顏淵請問什麼是「仁」。孔子說：「能夠克制自己的私慾，使言行都回歸到禮的規範上，這就是仁。一旦做到了克己復禮，天下的人都會稱許他是有仁德的人。實踐仁德要靠自己，難道是靠別人嗎？」\n顏淵曰：「請問其目。」\n子曰：「非禮勿視，非禮勿聽，非禮勿言，非禮勿動。」\n顏淵曰：「回雖不敏，請事斯語矣。」\n顏淵說：「請問實踐的具體條目是什麼？」孔子說：「不合於禮的不要看，不合於禮的不要聽，不合於禮的不要說，不合於禮的不要動。」\n顏淵說：「我（顏回）雖然不夠聰明，但我會努力遵照這些話去實踐。」\n子曰：「志士仁人，無求生以害仁，有殺身以成仁。」\n孔子說：「有志向、有仁德的人，絕對不會為了苟且偷生而損害仁德，反而會在必要時犧牲自己的生命來成全仁德。」","論君子#論君子":"子曰：「君子不重則不威；學則不固。主忠信。無友不如己者。過則勿憚改。」\n孔子說：「君子如果不莊重，就沒有威儀；學習的知識也就不會牢固。為人處事應以忠誠和信實為主要原則。不要結交品德不如自己的人。有了過錯，就不要害怕改正。」\n子曰：「君子坦蕩蕩，小人長戚戚。」\n孔子說：「君子心胸寬廣，神態安詳；小人則經常憂心忡忡，斤斤計較。」\n司馬牛問君子。子曰：「君子不憂不懼。」 曰：「不憂不懼，斯謂之君子已乎？」子曰：「內省不疚，夫何憂何懼？」\n司馬牛問什麼是君子。孔子說：「君子不憂愁，不恐懼。」司馬牛說：「不憂愁，不恐懼，這樣就能稱得上是君子了嗎？」孔子說：「反省自己的內心，如果問心無愧，那還有什麼好憂愁、好恐懼的呢？」\n子曰：「君子成人之美，不成人之惡。小人反是。」\n孔子說：「君子樂於成全別人的好事，不助長別人的壞事。小人的作為則與此完全相反。」\n子曰：「君子恥其言而過其行。」\n孔子說：「君子為自己說的話超過了自己所做的事而感到羞恥。」（意即君子認為言過其實是可恥的。）\n子曰：「君子義以為質，禮以行之，孫以出之，信以成之。君子哉！」\n孔子說：「君子以道義作為根本，用禮節來實踐它，用謙遜的言辭來表達它，用誠信的態度來完成它。這樣才真是個君子啊！」\n子曰：「君子病無能焉，不病人之不己知也。」\n孔子說：「君子只擔心自己沒有才能，不擔心別人不知道自己（的才能）。」\n子曰：「君子求諸己，小人求諸人。」\n孔子說：「君子要求的是自己，小人要求的是別人。」（意指君子凡事反躬自省，檢討自己；小人則只會苛求他人，諉過於人。）","論孝#論孝":"孟懿子問孝。子曰：「無違。」\n樊遲御，子告之曰：「孟孫問孝於我，我對曰，無違。」\n樊遲曰：「何謂也？」子曰：「生，事之以禮；死，葬之以禮，祭之以禮。」\n孟懿子問如何是孝。孔子曰：「不要違背禮節。」\n樊遲替孔子駕車，孔子告訴他說：「孟孫問我盡孝之道，我回答說， 不要違背禮節。」\n樊遲說：「這是甚麼意思呢？」孔子說：「父母健在時， 依規定的禮節侍奉他們；父母去世，依規定的禮節安葬他們、祭祀他們。」\n子游問孝。子曰：「今之孝者，是謂能養。至於犬馬，皆能有養；不敬，何以別乎！」\n孔子說：「現在所謂的孝子，只說能事奉供養父母。至於狗、馬，都能夠得到食物來飼養，如果對父母不敬，這跟飼養狗、馬有甚麼分別呢？」\n子曰：「事父母幾諫，見志不從，又敬不違，勞而不怨。」\n孔子說：「侍奉父母，如果父母有不對的地方，要婉言勸諫；看到自己的規勸沒有獲得父母接納，仍要恭敬地對待他們，不冒犯他們； 因多次勸諫父母而勞苦，但不會怨恨。」\n子曰：「父母之年，不可不知也。一則以喜，一則以懼。」\n孔子說：「父母的年齡，不能夠不時時刻刻記掛心上。一方面因父母長壽而高興，一方面因父母年事已高而恐懼。」"},"title":"論仁、論孝、論君子"},"/docs/school/1-chinese/2-%E9%AD%9A%E6%88%91%E6%89%80%E6%AC%B2%E4%B9%9F/":{"data":{"":"孟子曰︰「\n魚，我所欲也，熊掌，亦我所欲也；二者不可得兼，舍魚而取熊掌者也。\n生亦我所欲也，義亦我所欲也；二者不可得兼，舍生而取義者也。\n生亦我所欲，所欲有甚於生者，故不為苟得也；\n死亦我所惡，所惡有甚於死者，故患有所不辟也。\n如使人之所欲莫甚於生，則凡可以得生者，何不用也？\n使人之所惡莫甚於死者，則凡可以辟患者，何不為也？\n由是則生而有不用也，\n由是則可以辟患而有不為也，\n是故\n所欲有甚於生者，\n所惡有甚於死者。\n非獨賢者有是心也，人皆有之，賢者能勿喪耳。\n一簞食，一豆羹，\n得之則生，弗得則死。\n嘑爾而與之，行道之人弗受；\n蹴爾而與之，乞人不屑也；\n萬鍾則不辯禮義而受之。萬鍾於我何加焉？\n為宮室之美、妻妾之奉、所識窮乏者得我與？\n鄉為身死而不受，今為宮室之美為之；\n鄉為身死而不受，今為妻妾之奉為之；\n鄉為身死而不受，今為所識窮乏者得我而為之\n，是亦不可以已乎？\n此之謂失其本心。」"},"title":"魚我所欲也"},"/docs/school/2-english/":{"data":{"":"English Language is one of the 4 core subjects in the HKDSE. The students must attain Level 3 or above in English Language as one of the minimum requirements for admission to the local Bachelor’s degree programmes, or Level 2 or above for sub-degree programmes.\nThe curriculum provides students with learning experiences to increase their language proficiency in English for their future daily life and development; and promote lifelong learning to enhance their personal abilities and global competitiveness."},"title":"English"},"/docs/school/2-english/1-tenses/":{"data":{"":"理解英文時態的關鍵在於掌握兩個核心概念：\n時間點 (Time)：事件發生在過去、現在還是未來？ 動作狀態 (Action Status)：動作是「一次性完成」、「持續進行中」，還是「在某個時間點之前就已完成」？ 時間軸概念 (Timeline Concept) 使用時間軸可以幫助我們視覺化各個時態之間的關係。\n時間軸符號說明：\n|：現在 (Now) 的時間點。 X：一個單點、已完成的動作。 ●：一個明確的參考時間點 (例如：昨晚八點、當你打來時)。 ~~~~：一段持續進行中的動作。 [ACTION] 或 [~~~~]：方括號代表一個已發生的事件區間，其結果或影響會持續。 ──\u003e：箭頭表示時間的流動或動作的影響方向。 總時間軸概覽 過去 (Past) \u003c─────────────────── | (現在 Now) | ───────────────────\u003e 未來 (Future) 第一部分：過去相關時態 (Past Tenses) 這組時態都用來描述「過去」發生的事，但強調的重點不同。所有動作和參考點都在「現在 |」的左邊。\n時間軸 1. 過去簡單式 (Simple Past)\n概念：過去某個時間點 X 發生並結束的事。 時間軸： 過去 \u003c────────── X ──────────|──────────────────\u003e 未來 ↑ (現在) (昨晚看了電影) 2. 過去進行式 (Past Continuous)\n概念：在過去某個參考點 ● 的當下，一個動作 ~~~~ 正在進行。 時間軸： 過去 \u003c────── ● ~~~~~ ● ──────|──────────────────\u003e 未來 ↑ ↑ (現在) (你打電話來時) (我正在看電影) 3. 過去完成式 (Past Perfect)\n概念：在過去某個參考點 ● 之前，動作 X 就已經完成了。 時間軸： 過去 \u003c────── X ───── ● ──────|──────────────────\u003e 未來 ↑ ↑ (現在) (電影已開始) (我到達時) 4. 過去完成進行式 (Past Perfect Continuous)\n概念：一個動作 ~~~~ 從更早的過去開始，一直持續到過去的某個參考點 ● 為止。 時間軸： 過去 \u003c── [~~~~~~~~] ● ──────|──────────────────\u003e 未來 ↑ ↑ (現在) (已持續看了一小時) (停電時) 詳細說明 時態 (Tense) 結構 (Structure) 主要用法與概念 範例 (Example) 過去簡單式\n(Simple Past) S + V-ed 描述在過去某個特定時間點發生並已經結束的動作或狀態。 I watched that movie last night. (我昨晚看了那部電影。) 過去進行式\n(Past Continuous) S + was/were + V-ing 描述在過去某個特定時間點「正在進行中」的動作。常用來當作背景事件。 I was watching a movie when you called. (你打電話來的時候，我正在看電影。) 過去完成式\n(Past Perfect) S + had + V-p.p. 描述在過去某個時間點或另一個過去動作「之前」就已經完成的動作。 When I arrived, the movie had already started. (當我到達時，電影已經開始了。) 過去完成進行式\n(Past Perfect Continuous) S + had been + V-ing 強調一個動作在過去某個時間點之前「已經持續了一段時間」。 I had been watching the movie for an hour when the power went out. (當停電時，我已經持續看了一個小時的電影。) 快速比較 昨天我看了電影 → 過去簡單式 (I watched a movie yesterday.) 昨天晚上八點，我正在看電影 → 過去進行式 (I was watching a movie at 8 PM yesterday.) 在你來之前，我已經看完電影了 → 過去完成式 (I had already watched the movie before you came.) 在你來之前，我已經連續看了兩小時的電影 → 過去完成進行式 (I had been watching movies for two hours before you came.) 第二部分：現在相關時態 (Present Tenses) 這組時態都與「現在」有關，但連結的方式各不相同。所有動作都以「現在 |」為核心來描述。\n時間軸 1. 現在簡單式 (Simple Present)\n概念：描述一個習慣、事實或真理，它不局限於特定時間點，而是橫跨過去、現在與未來。 時間軸： 過去 \u003c── X ── X ──|── X ── X ──\u003e 未來 (現在) 2. 現在進行式 (Present Continuous)\n概念：動作 ~~~~ 正好在「現在 |」這個時間點上發生。 時間軸： 過去 \u003c────────── ~~~|~~~ ──────────\u003e 未來 ↑ (現在正在看電影) 3. 現在完成式 (Present Perfect)\n概念：一個在過去不確定的時間點發生的動作 [X]，其結果或影響持續到現在 |。 時間軸： 過去 \u003c── [X] ───────\u003e | ──────────\u003e 未來 ↑ ↑ (過去某時看過) (這個經驗影響到現在) 4. 現在完成進行式 (Present Perfect Continuous)\n概念：一個動作從過去某時開始 [，一路持續到現在 |，並且可能還會繼續下去。 時間軸： 過去 \u003c── [~~~~~~~~~~\u003e | ~~~~~~\u003e 未來 ↑ ↑ (從過去持續到現在) (眼睛很累是結果) 詳細說明 時態 (Tense) 結構 (Structure) 主要用法與概念 範例 (Example) 現在簡單式\n(Simple Present) S + V(s/es) 描述事實、真理、習慣或規律性的動作。 He watches movies every Friday. (他每個星期五都看電影。) 現在進行式\n(Present Continuous) S + is/am/are + V-ing 描述「現在這一刻」或「近期」正在進行的動作。 Be quiet! I am watching a movie now. (安靜！我正在看電影。) 現在完成式\n(Present Perfect) S + has/have + V-p.p. 描述一個從過去開始，並與現在有關聯的動作（經驗、結果、持續狀態）。 I have watched this movie before. (我以前看過這部電影。) 現在完成進行式\n(Present Perfect Continuous) S + has/have been + V-ing 強調一個動作從過去開始，一直持續到現在，重點在於過程。 I have been watching movies all day. That’s why my eyes are tired. (我已經持續看了一整天的電影了。) 快速比較 我喜歡看電影 → 現在簡單式 (I like watching movies.) → 喜好 我正在看電影 → 現在進行式 (I am watching a movie.) → 當下 我看過這部電影了 → 現在完成式 (I have watched this movie.) → 經驗 我已經連續看了三小時的電影 → 現在完成進行式 (I have been watching movies for three hours.) → 強調過程 第三部分：未來相關時態 (Future Tenses) 這組時態都用來描述「未來」的事，但從不同的角度切入。所有動作和參考點都在「現在 |」的右邊。","快速比較#\u003cstrong\u003e快速比較\u003c/strong\u003e":"","快速比較-1#\u003cstrong\u003e快速比較\u003c/strong\u003e":"","快速比較-2#\u003cstrong\u003e快速比較\u003c/strong\u003e":"我明天會看電影 → 未來簡單式 (I will watch a movie tomorrow.) 明天晚上八點，我會正在看電影 → 未來進行式 (I will be watching a movie at 8 PM tomorrow.) 在午夜之前，我會看完這部電影 → 未來完成式 (I will have watched this movie by midnight.) 到明天為止，我就會在這個專案上連續工作一個月了 → 未來完成進行式 (By tomorrow, I will have been working on this project for a month.)","時間軸#\u003cstrong\u003e時間軸\u003c/strong\u003e":"","時間軸-1#\u003cstrong\u003e時間軸\u003c/strong\u003e":"","時間軸-2#\u003cstrong\u003e時間軸\u003c/strong\u003e":"1. 未來簡單式 (Simple Future)\n概念：未來某個時間點 X 將會發生的事。 時間軸： 過去 \u003c──────────|────────── X ──────────\u003e 未來 (現在) ↑ (今晚要看電影) 2. 未來進行式 (Future Continuous)\n概念：在未來某個參考點 ● 的當下，一個動作 ~~~~ 將會正在進行。 時間軸： 過去 \u003c──────────|────── ● ~~~~~ ● ──────\u003e 未來 (現在) ↑ ↑ (晚上九點) (將會正在看電影) 3. 未來完成式 (Future Perfect)\n概念：在未來某個參考點 ● 之前，動作 X 就將會完成了。 時間軸： 過去 \u003c──────────|────────── X ───── ● ──\u003e 未來 (現在) ↑ ↑ (將會看完電影) (到晚上十一點時) 4. 未來完成進行式 (Future Perfect Continuous)\n概念：一個動作 ~~~~ 將會持續進行，直到未來的某個參考點 ● 為止，到那時已經持續了一段時間。 時間軸： 過去 \u003c──────────|── [~~~~~~~~] ● ──\u003e 未來 (現在) ↑ ↑ (將已持續看五小時) (到午夜時)","時間軸概念-timeline-concept#時間軸概念 (Timeline Concept)":"","第一部分過去相關時態-past-tenses#第一部分：過去相關時態 (Past Tenses)":"","第三部分未來相關時態-future-tenses#第三部分：未來相關時態 (Future Tenses)":"","第二部分現在相關時態-present-tenses#第二部分：現在相關時態 (Present Tenses)":"","總時間軸概覽#\u003cstrong\u003e總時間軸概覽\u003c/strong\u003e":"","詳細說明#\u003cstrong\u003e詳細說明\u003c/strong\u003e":"","詳細說明-1#\u003cstrong\u003e詳細說明\u003c/strong\u003e":"","詳細說明-2#\u003cstrong\u003e詳細說明\u003c/strong\u003e":"時態 (Tense) 結構 (Structure) 主要用法與概念 範例 (Example) 未來簡單式\n(Simple Future) S + will / be going to + V 描述未來將會發生的事（預測、計畫、即時決定）。 I will watch a movie tonight. (我今晚要看電影。) 未來進行式\n(Future Continuous) S + will be + V-ing 描述在未來某個特定時間點，「將會正在進行」的動作。 Don’t call me at 9 PM. I will be watching a movie. (晚上九點別打給我。我那時將會正在看電影。) 未來完成式\n(Future Perfect) S + will have + V-p.p. 描述在未來某個特定時間點「之前」，將會已經完成的動作。 By 11 PM, I will have watched the movie. (到晚上十一點為止，我將會已經看完那部電影了。) 未來完成進行式\n(Future Perfect Continuous) S + will have been + V-ing 強調一個動作到未來某個特定時間點為止，「將會已經持續了多久」。 By midnight, I will have been watching movies for five hours. (到午夜時，我將會已經持續看了五個小時的電影。)"},"title":"Tenses"},"/docs/school/3-math/":{"data":{"":"數學科必修部分是四個核心科目中數學科的一個組成部分，數學科由必修部分和延伸部分組成，考生可只報考必修部分，或同時報考兩個部分，而兩部分的成績會在成績單上分別列出。以文憑試成績報讀本地學士學位課程，數學科必修部分必須取得第 2 級或以上成績，作為最低入學條件之一。\n數學科的必修部分為學生提供基礎的數學概念和知識，及基礎以外更豐富的內容，讓學生明白數學與人類活動的關係，並在現實生活中應用來理解和評價較複雜的情況。"},"title":"數學"},"/docs/school/4-m2/":{"data":{"":"數學科延伸部分是四個核心科目中數學科的一個選修部分，數學科由必修部分和延伸部分組成，考生如要報考延伸部分，必須同時報考必修部分，而兩部分的成績會在成績單上分別列出。雖然課程設計上延伸部分只是數學科的一部分，並不是一個完整科目，但有部分較重視數學的聯招課程，容許將之視作一個完整選修科目來計算入學分數。\n延伸部分提供高階數學的知識和技能，以便學生日後在相關領域進修或工作。延伸部分又分為兩個單元，學生只可選修其中一個單元。單元一：「微積分與統計」是為將來在學科或職業上需要更多學知職的學生而設；單元二(M2)：「代數與微積分」是為希望從事與數學有關的職業的學生而設。"},"title":"M2"},"/docs/school/5-phy/":{"data":{"":"物理科是文憑試的甲類選修科目之一，屬「科學教育」的學習領域。這科目讓學生了解物理現象和理論，及其在科技上的應用和社會意義；以科學思維探究物理學的課題，並解決問題；認識物理學在工程、醫學、經濟和科技界的角色，並科學發展對科技演進的重要性，為終身學習奠定基礎。"},"title":"物理"},"/docs/school/5-phy/b1-%E4%BD%8D%E7%BD%AE%E5%92%8C%E7%A7%BB%E5%8B%95-%E5%8A%9B%E5%92%8C%E9%81%8B%E5%8B%95/":{"data":{"":"","勻加速運動方程#勻加速運動方程":"u是最初的瞬時速度\nv是最後的瞬時速度\naaa是加速度\nsss是位移\nttt 是所需的時間\nv = u + atatat\n最後的瞬時速度 = 最初的瞬時速度 + (加速度 × 經過的時間) v u aaa ttt\nsss = ut+12at2t + \\frac{1}{2}at^2t+21​at2\n位移=(最初的瞬時速度×經過的時間)+加速度×(經過的時間)22\\text{位移} = (\\text{最初的瞬時速度} \\times \\text{經過的時間}) + \\frac{\\text{加速度} \\times (\\text{經過的時間})²}{2}位移=(最初的瞬時速度×經過的時間)+2加速度×(經過的時間)2​ u sss aaa ttt\ns=12(s = \\frac{1}{2}(s=21​(u+v)t)t)t\n位移=(最初的瞬時速度+最後的瞬時速度)×經過的時間2\\text{位移} = \\frac{(\\text{最初的瞬時速度} + \\text{最後的瞬時速度}) \\times \\text{經過的時間}}{2}位移=2(最初的瞬時速度+最後的瞬時速度)×經過的時間​ sss u v ttt\n梯形面積公式\nv2^22 = u2+2as^2 + 2as2+2as\n(最後的瞬時速度)² = (最初的瞬時速度)² + 2 × 加速度 × 位移 v u aaa sss","概念#概念":"無方向 有方向 距離 位移 速率 速度 加速度","運動線圖#運動線圖":"位移-時間 線圖\n速度-時間 線圖\n位移=面積\n加速度-時間 線圖"},"title":"B1 位置和移動-力和運動"},"/docs/school/6-ict/":{"data":{"":"資訊及通訊科技科 (ICT) 是文憑試的甲類選修科目之一，屬「科技教育」的學習領域。資訊的處理和傳送技術，在現今資訊爆炸的年代，對於在世界經濟中，維持社會的競爭力有着不可或缺的角色。這科目培養學生有效率地使用資訊科技，並懂得分辨資訊，明白當中的道德議題及對知識型社會帶來的影響。"},"title":"ICT"},"/docs/school/6-ict/1-a2%E8%A9%A6%E7%AE%97%E8%A1%A8%E5%87%BD%E6%95%B8/":{"data":{"and#AND":"功能說明：檢查所有條件是否都為 TRUE。如果所有條件皆為 TRUE，則回傳 TRUE；只要有任一條件為 FALSE，就回傳 FALSE。 語法：AND(logical1, [logical2], ...) 參數說明： logical1 (必要): 第一個要評估的條件。 logical2 (可選): 第二個及之後要評估的條件，最多可達 255 個。 範例：=AND(A1\u003e60, B1=\"男\") 只有當 A1 大於 60 且 B1 是 “男” 時，才會回傳 TRUE。","average#AVERAGE":"功能說明：計算所有參數的算術平均值。 語法：AVERAGE(number1, [number2], ...) 參數說明： number1 (必要): 第一個要計算平均的數字、儲存格或範圍。 number2 (可選): 其他要計算平均的數字、儲存格或範圍。 範例：=AVERAGE(A1:A10) 會計算 A1 到 A10 儲存格中所有數字的平均值。","count#COUNT":"功能說明：計算一個範圍內包含「數字」的儲存格數量。 語法：COUNT(value1, [value2], ...) 參數說明： value1 (必要): 第一個要計算的項目、儲存格參照或範圍。 value2 (可選): 其他要計算的項目、儲存格參照或範圍。 範例：若 A1=95, A2=“缺考”, A3=88，則 =COUNT(A1:A3) 會回傳 2。","countif#COUNTIF":"功能說明：計算一個範圍內符合「單一條件」的儲存格數量。 語法：COUNTIF(range, criteria) 參數說明： range (必要): 您想要計算的儲存格範圍。 criteria (必要): 用來決定哪些儲存格要被計算的條件（可以是數字、運算式、文字）。 範例：=COUNTIF(B1:B20, \"\u003e=60\") 會計算 B1 到 B20 範圍內，數值大於或等於 60 的儲存格數量。","find#FIND":"功能說明：在一個文字字串中尋找另一個文字字串，並回傳其開始的位置編號。此函數有區分英文大小寫。 語法：FIND(find_text, within_text, [start_num]) 參數說明： find_text (必要): 您要尋找的文字。 within_text (必要): 包含您要尋找文字的目標字串。 start_num (可選): 指定在 within_text 中從第幾個字元開始搜尋。如果省略，預設為 1。 範例：=FIND(\"P\", \"Apple iPad\") 將回傳 8。","if#IF":"功能說明：執行邏輯判斷。如果條件為真，則回傳一個值；如果條件為假，則回傳另一個值。 語法：IF(logical_test, value_if_true, [value_if_false]) 參數說明： logical_test (必要): 任何可以評估為 TRUE 或 FALSE 的值或運算式。 value_if_true (必要): 當 logical_test 為 TRUE 時要傳回的值。 value_if_false (可選): 當 logical_test 為 FALSE 時要傳回的值。如果省略，則會回傳 FALSE。 範例：=IF(A1\u003e=60, \"及格\", \"不及格\") 如果 A1 的分數大於或等於 60，就顯示 “及格”，否則顯示 “不及格”。","int#INT":"功能說明：無條件捨去數字的小數部分，傳回整數。 語法：INT(number) 參數說明： number (必要): 您想要無條件捨去的數字或儲存格參照。 範例：=INT(99.9) 將回傳 99。","left#LEFT":"功能說明：從文字字串的左邊（開頭）開始，傳回指定數量的字元。 語法：LEFT(text, [num_chars]) 參數說明： text (必要): 包含您想擷取字元的文字字串。 num_chars (可選): 指定要擷取的字元數。如果省略，預設為 1。 範例：=LEFT(\"台北101\", 2) 將回傳 台北。","len#LEN":"功能說明：計算一個文字字串的總長度（字元數）。 語法：LEN(text) 參數說明： text (必要): 您想要計算長度的文字。 範例：=LEN(\"Hello World\") 將回傳 11 (空格也算一個字元)。","max#MAX":"功能說明：找出一個範圍內的最大值。 語法：MAX(number1, [number2], ...) 參數說明： number1 (必要): 第一個要尋找最大值的數字、儲存格或範圍。 number2 (可選): 其他要比較大小的數字、儲存格或範圍。 範例：=MAX(A1:A10) 會回傳 A1 到 A10 範圍中的最大值。","mid#MID":"功能說明：從文字字串的指定位置開始，傳回指定數量的字元。 語法：MID(text, start_num, num_chars) 參數說明： text (必要): 包含您想擷取字元的文字字串。 start_num (必要): 您要開始擷取的起始字元位置（從 1 開始算）。 num_chars (必要): 您要擷取的字元數。 範例：=MID(\"我是台灣人\", 3, 2) 將回傳 台灣。","min#MIN":"功能說明：找出一個範圍內的最小值。 語法：MIN(number1, [number2], ...) 參數說明： number1 (必要): 第一個要尋找最小值的數字、儲存格或範圍。 number2 (可選): 其他要比較大小的數字、儲存格或範圍。 範例：=MIN(A1:A10) 會回傳 A1 到 A10 範圍中的最小值。","not#NOT":"功能說明：將邏輯值反轉。TRUE 變為 FALSE，FALSE 變為 TRUE。 語法：NOT(logical) 參數說明： logical (必要): 一個可以評估為 TRUE 或 FALSE 的值或運算式。 範例：=NOT(A1=10) 如果 A1 的值不等於 10，則回傳 TRUE。","or#OR":"功能說明：檢查是否有任何一個條件為 TRUE。只要有任一條件為 TRUE，就回傳 TRUE；只有當所有條件都為 FALSE 時，才回傳 FALSE。 語法：OR(logical1, [logical2], ...) 參數說明： logical1 (必要): 第一個要評估的條件。 logical2 (可選): 第二個及之後要評估的條件，最多可達 255 個。 範例：=OR(A1=\"週末\", A1=\"國定假日\") 只要 A1 是 “週末” 或 “國定假日”，就會回傳 TRUE。","rand#RAND":"功能說明：產生一個大於或等於 0 且小於 1 的隨機亂數。每次重新計算工作表時，此數值都會變動。 語法：RAND() 參數說明： 此函數沒有任何參數。 範例：=RAND()*100 將產生一個 0 到 100 之間的隨機數。","rank#RANK":"功能說明：傳回一個數字在一組數字清單中的排名。（註：新版 Excel 建議使用 RANK.EQ） 語法：RANK(number, ref, [order]) 參數說明： number (必要): 您想要知道排名的數字。 ref (必要): 包含數字清單的範圍。 order (可選): 指定排名的順序。0 或省略代表遞減（高分是第 1 名）；任何非零值代表遞增（低分是第 1 名）。 範例：=RANK(A1, A1:A20, 0) 會計算 A1 的值在 A1:A20 範圍中的排名（遞減排序）。","right#RIGHT":"功能說明：從文字字串的右邊（結尾）開始，傳回指定數量的字元。 語法：RIGHT(text, [num_chars]) 參數說明： text (必要): 包含您想擷取字元的文字字串。 num_chars (可選): 指定要擷取的字元數。如果省略，預設為 1。 範例：=RIGHT(\"產品編號-ABC\", 3) 將回傳 ABC。","round#ROUND":"功能說明：將數字四捨五入到指定的位數。 語法：ROUND(number, num_digits) 參數說明： number (必要): 您想要進行四捨五入的數字。 num_digits (必要): 您想要四捨五入到的位數。正數代表小數點右側的位數；0 代表整數位；負數代表小數點左側的位數（例如 -1 代表十位數）。 範例： =ROUND(3.14159, 2) 將回傳 3.14。 =ROUND(12345, -2) 將回傳 12300。","sqrt#SQRT":"功能說明：計算一個數字的正平方根。 語法：SQRT(number) 參數說明： number (必要): 您想要計算平方根的數字。此數字必須為正數。 範例：=SQRT(144) 將回傳 12。","sum#SUM":"功能說明：將指定的儲存格或範圍中的所有數字加總。 語法：SUM(number1, [number2], ...) 參數說明： number1 (必要): 第一個要加總的數字、儲存格或範圍。 number2 (可選): 其他要加總的數字、儲存格或範圍。 範例：=SUM(A1:A10) 會將 A1 到 A10 的所有數值相加。","sumif#SUMIF":"功能說明：將一個範圍內符合「單一條件」的對應儲存格加總。 語法：SUMIF(range, criteria, [sum_range]) 參數說明： range (必要): 用於條件判斷的儲存格範圍。 criteria (必要): 決定哪些儲存格要被加總的條件。 sum_range (可選): 實際要進行加總的儲存格範圍。如果省略，則會加總 range 參數中的數字。 範例：=SUMIF(A1:A10, \"水果\", B1:B10) 會在 A1:A10 範圍中尋找 “水果”，並將 B1:B10 範圍中對應的數值加總。","xlookup#XLOOKUP":"功能說明：一個強大且靈活的查詢函數，用於在一個範圍或陣列中尋找項目，並傳回對應項目。 語法：XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode]) 參數說明： lookup_value (必要): 您要尋找的值。 lookup_array (必要): 要在其中搜尋的範圍或陣列。 return_array (必要): 要從中傳回值的範圍或陣列。 if_not_found (可選): 如果找不到相符項目時要傳回的值。若省略，則會回傳 #N/A 錯誤。 match_mode (可選): 指定比對方式。0 (預設)為完全相符；-1 為下一個較小項目；1 為下一個較大項目；2 為萬用字元比對。 search_mode (可選): 指定搜尋模式。1 (預設)從第一個項目開始搜尋；-1 從最後一個項目開始反向搜尋。 範例：=XLOOKUP(\"S003\", A1:A100, B1:B100, \"查無此員工\") 會在 A 欄中尋找 “S003”，回傳 B 欄對應的姓名，如果找不到則顯示 “查無此員工”。","數學與數值函數#數學與數值函數":"Function 簡介 1. INT 無條件捨去數字的小數部分，傳回整數 2. RAND 產生一個大於或等於 0 且小於 1 的隨機亂數。每次重新計算工作表時，此數值都會變動。 3. SQRT 計算一個數字的正平方根 4. ROUND 將數字四捨五入到指定的位數。","數學與數值函數-1#數學與數值函數":"","文字函數#文字函數":"Function 簡介 8. LEFT 從文字字串的左邊（開頭）開始，傳回指定數量的字元。 9. LEN 計算一個文字字串的總長度（字元數）。 10. MID 從文字字串的指定位置開始，傳回指定數量的字元。 11. RIGHT 從文字字串的右邊（結尾）開始，傳回指定數量的字元。 12. FIND 在一個文字字串中尋找另一個文字字串，並回傳其開始的位置編號。此函數有區分英文大小寫。","文字函數-1#文字函數":"","查詢與判斷函數#查詢與判斷函數":"Function 簡介 21. XLOOKUP 一個強大且靈活的查詢函數，用於在一個範圍或陣列中尋找項目，並傳回對應項目。 22. IF 執行邏輯判斷。如果條件為真，則回傳一個值；如果條件為假，則回傳另一個值。","查詢與判斷函數-1#查詢與判斷函數":"","目錄#目錄":"目錄","統計與計算函數#統計與計算函數":"Function 簡介 13. AVERAGE 計算所有參數的算術平均值。 14. COUNT 計算一個範圍內包含「數字」的儲存格數量。 15. COUNTIF 計算一個範圍內符合「單一條件」的儲存格數量。 16. MAX 找出一個範圍內的最大值。 17. MIN 找出一個範圍內的最小值。 18. RANK 傳回一個數字在一組數字清單中的排名。（註：新版 Excel 建議使用 RANK.EQ） 19. SUM 將指定的儲存格或範圍中的所有數字加總。 20. SUMIF 將一個範圍內符合「單一條件」的對應儲存格加總。","統計與計算函數-1#統計與計算函數":"","詳細使用方法#詳細使用方法":"","邏輯函數#邏輯函數":"Function 簡介 5. AND 檢查所有條件是否都為 TRUE。如果所有條件皆為 TRUE，則回傳 TRUE；只要有任一條件為 FALSE，就回傳 FALSE。 6. NOT 將邏輯值反轉。TRUE 變為 FALSE，FALSE 變為 TRUE。 7. OR 檢查是否有任何一個條件為 TRUE。只要有任一條件為 TRUE，就回傳 TRUE；只有當所有條件都為 FALSE 時，才回傳 FALSE。","邏輯函數-1#邏輯函數":""},"title":"A2 試算表函數"},"/docs/tech/":{"data":{"":"I will share some Note about my coding or play the home lab"},"title":"Tech"},"/docs/tech/1-git/":{"data":{"":"","git#Git":"使用者資料(只需在下載git後運行一次) git config --global user.name \"name\" git config --global user.email \"name@email.com\" 文件狀態 :\ngit status (檢查)\ngit add . (追蹤)\ngit commit -m \"備註\" (暫存) Branch:\ngit checkout -b { branchName } (add 分支)\ngit push { branchName }(推送branch)\ngit merge { 被合併分支 branchName }(merge branch) other:\ngit log (日誌)\ngit log --oneline(日誌line)\ngit diff ID (比較)\ngit checkout ID -- file_name （應用）","github#GITHUB":"git push (上傳github)\ngit clone URL (fork the repo)\ngit pull (同步)\ngit pull --rebase（把遠端的檔案拉到自己的本地，把本地最新的資料放到最前面）"},"title":"Git \u0026 Github"},"/docs/tech/python/1-pyenv/":{"data":{"":"pyenv 是一個強大的 Python 版本管理工具，主要用於 Linux 和 macOS 系統。\n對於 Windows 使用者，推薦使用pyenv-win 專案，它是 pyenv 在 Windows 上的移植版本。本教學將涵蓋這兩個工具的安裝、設定與基本使用。\npyenv/pyenv-win 簡介 作用：讓你輕鬆安裝、管理並切換多個 Python 版本，而不會影響系統預設的 Python 環境。 優點： 版本隔離：在使用者層級管理 Python 版本，避免與系統 Python 衝突。 專案獨立：可以為不同專案設定獨立的 Python 版本。 易於切換：透過簡單的指令即可快速切換 Python 版本。 pyenv vs pyenv-win： pyenv：原生支援 Linux、macOS 和其他類 Unix 系統。 pyenv-win：專為 Windows 設計，安裝原生 Windows Python 版本。 安裝 pyenv (Linux/macOS) 在安裝 pyenv 之前，請確保你的系統已安裝必要的建置依賴項。具體依賴項列表請參考 pyenv 官方文件。\n方法一：使用自動安裝程式 (推薦) 這個安裝程式會自動將 pyenv 及其常用外掛 (如 pyenv-build, pyenv-virtualenv, pyenv-update) 安裝到 $HOME/.pyenv 目錄。\ncurl -fsSL https://pyenv.run | bash 方法二：使用 Homebrew (macOS) 如果你使用 Homebrew，這是安裝 pyenv 的便捷方式。\n更新 Homebrew 並安裝 pyenv： brew update brew install pyenv 如果你想安裝 pyenv 的最新開發版本： brew install pyenv --head 方法三：手動 GitHub Checkout 這種方法讓你更容易追蹤最新版本或貢獻程式碼。\n將 pyenv 儲存庫複製到你想要安裝的位置 (建議 $HOME/.pyenv)： git clone https://github.com/pyenv/pyenv.git ~/.pyenv (可選) 編譯 Bash 擴充功能以加速 pyenv (如果失敗不影響 pyenv 正常運作)： cd ~/.pyenv \u0026\u0026 src/configure \u0026\u0026 make -C src 安裝 pyenv-win (Windows) pyenv-win 專為 Windows 設計，提供多種安裝方式。","macoslinuxwsl-pyenv#macOS/Linux/WSL (pyenv)":"將以下內容加入你的 Shell 設定檔 (例如 ~/.bashrc, ~/.zshrc, ~/.profile)。建議將這些行放在檔案的末尾。\nexport PYENV_ROOT=\"$HOME/.pyenv\" command -v pyenv \u003e/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\" eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" # 如果安裝了 pyenv-virtualenv 外掛，還需加上： eval \"$(pyenv virtualenv-init -)\" 儲存檔案後，執行 source ~/.bashrc (或對應的設定檔) 或重啟終端機，使變更生效。","macoslinuxwsl-pyenv-1#macOS/Linux/WSL (pyenv)":"列出所有可安裝的 Python 版本： pyenv install --list 安裝指定版本的 Python (例如 3.11.8)： pyenv install 3.11.8 安裝過程可能需要編譯，請確保已安裝必要的建置依賴項。","pyenvpyenv-win-簡介#pyenv/pyenv-win 簡介":"","shell-切換-pyenv-shell#Shell 切換 (\u003ccode\u003epyenv shell\u003c/code\u003e)":"僅在當前 Shell 會話中設定 Python 版本。當前 Shell 關閉後，設定會失效。\npyenv shell \u003c版本號\u003e 例如：pyenv shell 3.9.7","windows-pyenv-win#Windows (pyenv-win)":"你需要手動添加或修改系統環境變數。\n開啟「系統環境變數」設定 (搜尋「編輯系統環境變數」)。 在「使用者變數」或「系統變數」中： 新增一個變數，名稱為 PYENV，值為 pyenv-win 的安裝路徑 (預設為 C:\\Users\\\\.pyenv\\pyenv-win)。 編輯 Path 變數，添加以下兩條路徑： %PYENV%\\bin %PYENV%\\shims 確保這兩條路徑在 Path 列表中的優先順序較高。 重要：如果你是 Windows 10 1905 或更新版本，並且遇到 pyenv: command not found 的問題，可能需要禁用內建的 Python 啟動器。前往「應用程式執行別名」(App Execution Aliases)，關閉 Python 的「App Installer」別名。 重啟 PowerShell 或 CMD，或重啟你的 IDE 內建終端機，使環境變數生效。","windows-pyenv-win-1#Windows (pyenv-win)":"列出所有可安裝的 Python 版本： pyenv install --list 安裝指定版本的 Python (例如 3.12.3)： pyenv install 3.12.3 部分版本的安裝可能會彈出安裝精靈，請按照提示完成安裝。你也可以使用 -q 參數進行靜默安裝 (如果支援)。","windows-特有問題-pyenv-win#Windows 特有問題 (pyenv-win)":"安裝特定版本失敗： pyenv-win 可能不支援非常老舊的 Python 版本。 檢查 pyenv-win 的 GitHub 頁面或 issue 列表，看是否有關於該版本的已知問題。 環境變數配置問題： 確保 PYENV 變數指向正確的安裝路徑。 確保 %PYENV%\\bin 和 %PYENV%\\shims 已添加到 Path 中，並且優先順序正確。","全域切換-pyenv-global#全域切換 (\u003ccode\u003epyenv global\u003c/code\u003e)":"設定全域 Python 版本，這是你使用者帳戶的預設版本。\npyenv global \u003c版本號\u003e 例如：pyenv global 3.12.3","切換-python-版本#切換 Python 版本":"pyenv/pyenv-win 提供了三種方式來切換 Python 版本：global, local, 和 shell。","卸載-pyenvpyenv-win#卸載 pyenv/pyenv-win":"pyenv (Linux/macOS)： 從 Shell 設定檔中移除所有 pyenv 相關的行。 刪除 pyenv 的安裝目錄：rm -rf $(pyenv root) 如果使用 Homebrew 安裝：brew uninstall pyenv pyenv-win (Windows)： 從系統環境變數中移除 PYENV 變數以及 Path 中包含 %PYENV% 的路徑。 刪除 pyenv-win 的安裝目錄 (預設為 C:\\Users\\\\.pyenv\\pyenv-win)。 如果使用 Chocolatey 安裝：choco uninstall pyenv-win","卸載-python-版本#卸載 Python 版本":"使用 pyenv uninstall 命令來移除已安裝的 Python 版本。\npyenv uninstall \u003c版本號\u003e 例如：pyenv uninstall 3.8.18","參考連結#參考連結":"pyenv GitHub 儲存庫 pyenv-win GitHub 儲存庫 pyenv 官方文件 pyenv-win 官方文件 pyenv-virtualenv 外掛 希望這份教學能幫助你更好地理解和使用 pyenv 和 pyenv-win 來管理你的 Python 環境！","同時使用多個版本#同時使用多個版本":"你可以指定多個版本，pyenv 會按照指定的順序尋找可執行的命令。\npyenv global \u003c版本號1\u003e \u003c版本號2\u003e ... 例如：pyenv global 3.12.3 3.11.8 system (優先使用 3.12.3，找不到則用 3.11.8，最後使用系統 Python)","安裝-pyenv-linuxmacos#安裝 pyenv (Linux/macOS)":"","安裝-pyenv-win-windows#安裝 pyenv-win (Windows)":"","安裝-python-版本#安裝 Python 版本":"pyenv/pyenv-win 透過 pyenv install 命令來安裝不同版本的 Python。","工作原理-簡述#工作原理 (簡述)":"pyenv/pyenv-win 的核心原理是透過修改系統的 PATH 環境變數來攔截 Python 相關命令。\nShims (墊片)：pyenv/pyenv-win 會在 PATH 的最前面插入一個 shims 目錄。這個目錄包含許多與 Python 命令 (如 python, pip) 同名的可執行檔案 (墊片)。 攔截命令：當你在終端機中執行 python 或 pip 時，系統會先在 shims 目錄中找到對應的墊片並執行它。 版本判斷：墊片會根據你設定的全域、本地或 Shell 版本來判斷應該使用哪個 Python 版本。 轉發命令：墊片將命令轉發給正確版本的 Python 可執行檔案。 這種機制使得你可以在不修改系統 Python 的情況下，靈活地切換和管理多個 Python 版本。","常見問題與解決方法#常見問題與解決方法":"","方法一使用-powershell-安裝-推薦#方法一：使用 PowerShell 安裝 (推薦)":"這個方法會自動下載並安裝最新版本的 pyenv-win 到 C:\\Users\\\\.pyenv\\pyenv-win。\n以管理員身份開啟 PowerShell。 執行以下命令： Invoke-WebRequest -UseBasicParsing -Uri \"https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1\" -OutFile \"./install-pyenv-win.ps1\"; \u0026\"./install-pyenv-win.ps1\"","方法一使用自動安裝程式-推薦#方法一：使用自動安裝程式 (推薦)":"","方法三使用-pip-安裝-適用於已有-python-環境的使用者#方法三：使用 pip 安裝 (適用於已有 Python 環境的使用者)":"如果你已經安裝了 Python 並有 pip，可以使用 pip 安裝 pyenv-win。\npip install pyenv-win --target $HOME\\.pyenv\\pyenv-win 安裝完成後，你可能需要手動配置環境變數。","方法三手動-github-checkout#方法三：手動 GitHub Checkout":"","方法二使用-homebrew-macos#方法二：使用 Homebrew (macOS)":"","方法二手動-git-安裝#方法二：手動 Git 安裝":"開啟 PowerShell 或 CMD，執行： git clone https://github.com/pyenv-win/pyenv-win.git $HOME\\.pyenv\\pyenv-win 配置環境變數 (參見下一節)。","方法四使用-chocolatey#方法四：使用 Chocolatey":"如果你使用 Chocolatey 套件管理器：\nchoco install pyenv-win","更新-pyenvpyenv-win#更新 pyenv/pyenv-win":"pyenv (Linux/macOS)： 如果使用 Homebrew 安裝：brew upgrade pyenv 如果使用自動安裝程式或 Git 安裝 (並安裝了 pyenv-update 外掛)：pyenv update 手動 Git 更新：cd $(pyenv root) \u0026\u0026 git pull pyenv-win (Windows)： 如果使用 PowerShell 安裝程式安裝：重新執行安裝命令。 如果使用 Git 安裝：cd $HOME\\.pyenv\\pyenv-win \u0026\u0026 git pull 如果使用 pip 安裝：pip install --upgrade pyenv-win","本地切換-pyenv-local#本地切換 (\u003ccode\u003epyenv local\u003c/code\u003e)":"在當前目錄及其子目錄中設定 Python 版本。這會在當前目錄下建立一個 .python-version 檔案。\npyenv local \u003c版本號\u003e 例如：pyenv local 3.8.18","查看所有已安裝的-python-版本#查看所有已安裝的 Python 版本":"pyenv versions","查看當前使用的-python-版本#查看當前使用的 Python 版本":"pyenv version","虛擬環境#虛擬環境":"macOS/Linux/WSL (pyenv-virtualenv)： 如果你使用自動安裝程式或手動安裝了 pyenv-virtualenv 外掛，可以使用它來管理虛擬環境。\n建立虛擬環境 (基於指定 Python 版本)： pyenv virtualenv \u003c虛擬環境名稱\u003e 例如：pyenv virtualenv 3.11.8 myenv 啟用虛擬環境： pyenv activate \u003c虛擬環境名稱\u003e 停用虛擬環境： pyenv deactivate 刪除虛擬環境： pyenv uninstall \u003c虛擬環境名稱\u003e Windows (venv)： 在 Windows 上，推薦使用 Python 內建的 venv 模組來建立虛擬環境。\n首先使用 pyenv global 或 pyenv local 切換到你想要的 Python 版本。 在專案目錄下建立虛擬環境： python -m venv \u003c虛擬環境名稱\u003e 例如：python -m venv myenv 啟用虛擬環境： .\\\u003c虛擬環境名稱\u003e\\Scripts\\activate 停用虛擬環境： deactivate","通用問題#通用問題":"pyenv: command not found： 檢查環境變數是否配置正確，並確保 pyenv/pyenv-win 的 bin 和 shims 目錄已添加到 Path 中。 重啟終端機或電腦。 (Windows) 檢查是否禁用了內建的 Python 啟動器。 安裝 Python 失敗 (編譯錯誤)： (Linux/macOS) 確保已安裝所有必要的建置依賴項。 檢查網路連接，部分版本的下載可能需要科學上網。 pip 或 pip3 問題： 在切換 Python 版本後，建議更新 pip：python -m pip install --upgrade pip","進階用法#進階用法":"","配置環境變數#配置環境變數":"正確配置環境變數是 pyenv/pyenv-win 正常運作的關鍵。","驗證安裝#驗證安裝":"開啟新的終端機視窗，執行以下命令：\npyenv --version 如果顯示 pyenv 或 pyenv-win 的版本號，則表示安裝成功。"},"title":"pyenv 與 pyenv-win 全面教學"},"/docs/tech/video/1-gemini-proxy/":{"data":{"":"https://github.com/spectre-pro/gemini-proxy\ngithub","bilibili#BiliBili":"","youtube#YouTube":""},"title":"Gemini proxy"},"/docs/tech/video/2-open-webui/":{"data":{"":"","bilibili#BiliBili":"","youtube#YouTube":""},"title":"Open WebUI"},"/docs/tech/video/3-domain/":{"data":{"bilibili#BiliBili":"","youtube#YouTube":"","不用付錢也能擁有自己的網址超簡單域名申請教學#不用付錢，也能擁有自己的網址！超簡單域名申請教學":"不用付錢，也能擁有自己的網址！超簡單域名申請教學"},"title":"白嫖域名"},"/docs/tech/video/4-ubuntu/":{"data":{"bilibili#BiliBili":"","youtube#YouTube":"","別再讓它吃灰三十分鐘變身-7x24-小時終極家庭伺服器-ubuntu-server--docker--cockpit--smb#別再讓它吃灰！三十分鐘變身 7x24 小時終極家庭伺服器 (Ubuntu Server + Docker + cockpit + SMB)":"別再讓它吃灰！三十分鐘變身 7x24 小時終極家庭伺服器 (Ubuntu Server + Docker + cockpit + SMB)"},"title":"舊電腦復活計畫"},"/docs/tech/video/5-github-ai/":{"data":{"bilibili#BiliBili":"","youtube#YouTube":"","一個賬號免費試用所有頂級-ai-github-ai-申請教學-內含-gpt-4-grok-deepseek#一個賬號，免費試用所有頂級 AI！ GitHub AI 申請教學 (內含 GPT-4, Grok, DeepSeek)。":"一個賬號，免費試用所有頂級 AI！ GitHub AI 申請教學 (內含 GPT-4, Grok, DeepSeek)。"},"title":"GitHub AI 終極白嫖指南"}}